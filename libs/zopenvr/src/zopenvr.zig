pub const System = struct {};

pub fn init(application_type: ApplicationType) InitError!*System {
    var init_error: EVRInitError = .None;
    const system_ptr = VR_InitInternal(&init_error, application_type);
    try init_error.maybe();
    return @ptrFromInt(system_ptr);
}

const InitError = error{
    None,
    Unknown,
    Init_InstallationNotFound,
    Init_InstallationCorrupt,
    Init_VRClientDLLNotFound,
    Init_FileNotFound,
    Init_FactoryNotFound,
    Init_InterfaceNotFound,
    Init_InvalidInterface,
    Init_UserConfigDirectoryInvalid,
    Init_HmdNotFound,
    Init_NotInitialized,
    Init_PathRegistryNotFound,
    Init_NoConfigPath,
    Init_NoLogPath,
    Init_PathRegistryNotWritable,
    Init_AppInfoInitFailed,
    Init_Retry,
    Init_InitCanceledByUser,
    Init_AnotherAppLaunching,
    Init_SettingsInitFailed,
    Init_ShuttingDown,
    Init_TooManyObjects,
    Init_NoServerForBackgroundApp,
    Init_NotSupportedWithCompositor,
    Init_NotAvailableToUtilityApps,
    Init_Internal,
    Init_HmdDriverIdIsNone,
    Init_HmdNotFoundPresenceFailed,
    Init_VRMonitorNotFound,
    Init_VRMonitorStartupFailed,
    Init_LowPowerWatchdogNotSupported,
    Init_InvalidApplicationType,
    Init_NotAvailableToWatchdogApps,
    Init_WatchdogDisabledInSettings,
    Init_VRDashboardNotFound,
    Init_VRDashboardStartupFailed,
    Init_VRHomeNotFound,
    Init_VRHomeStartupFailed,
    Init_RebootingBusy,
    Init_FirmwareUpdateBusy,
    Init_FirmwareRecoveryBusy,
    Init_USBServiceBusy,
    Init_VRWebHelperStartupFailed,
    Init_TrackerManagerInitFailed,
    Init_AlreadyRunning,
    Init_FailedForVrMonitor,
    Init_PropertyManagerInitFailed,
    Init_WebServerFailed,
    Init_IllegalTypeTransition,
    Init_MismatchedRuntimes,
    Init_InvalidProcessId,
    Init_VRServiceStartupFailed,
    Init_PrismNeedsNewDrivers,
    Init_PrismStartupTimedOut,
    Init_CouldNotStartPrism,
    Init_PrismClientInitFailed,
    Init_PrismClientStartFailed,
    Init_PrismExitedUnexpectedly,
    Init_BadLuid,
    Init_NoServerForAppContainer,
    Init_DuplicateBootstrapper,
    Init_VRDashboardServicePending,
    Init_VRDashboardServiceTimeout,
    Init_VRDashboardServiceStopped,
    Init_VRDashboardAlreadyStarted,
    Init_VRDashboardCopyFailed,
    Init_VRDashboardTokenFailure,
    Init_VRDashboardEnvironmentFailure,
    Init_VRDashboardPathFailure,
    Driver_Failed,
    Driver_Unknown,
    Driver_HmdUnknown,
    Driver_NotLoaded,
    Driver_RuntimeOutOfDate,
    Driver_HmdInUse,
    Driver_NotCalibrated,
    Driver_CalibrationInvalid,
    Driver_HmdDisplayNotFound,
    Driver_TrackedDeviceInterfaceUnknown,
    Driver_HmdDriverIdOutOfBounds,
    Driver_HmdDisplayMirrored,
    Driver_HmdDisplayNotFoundLaptop,
    Driver_PeerDriverNotInstalled,
    Driver_WirelessHmdNotConnected,
    IPC_ServerInitFailed,
    IPC_ConnectFailed,
    IPC_SharedStateInitFailed,
    IPC_CompositorInitFailed,
    IPC_MutexInitFailed,
    IPC_Failed,
    IPC_CompositorConnectFailed,
    IPC_CompositorInvalidConnectResponse,
    IPC_ConnectFailedAfterMultipleAttempts,
    IPC_ConnectFailedAfterTargetExited,
    IPC_NamespaceUnavailable,
    Compositor_Failed,
    Compositor_D3D11HardwareRequired,
    Compositor_FirmwareRequiresUpdate,
    Compositor_OverlayInitFailed,
    Compositor_ScreenshotsInitFailed,
    Compositor_UnableToCreateDevice,
    Compositor_SharedStateIsNull,
    Compositor_NotificationManagerIsNull,
    Compositor_ResourceManagerClientIsNull,
    Compositor_MessageOverlaySharedStateInitFailure,
    Compositor_PropertiesInterfaceIsNull,
    Compositor_CreateFullscreenWindowFailed,
    Compositor_SettingsInterfaceIsNull,
    Compositor_FailedToShowWindow,
    Compositor_DistortInterfaceIsNull,
    Compositor_DisplayFrequencyFailure,
    Compositor_RendererInitializationFailed,
    Compositor_DXGIFactoryInterfaceIsNull,
    Compositor_DXGIFactoryCreateFailed,
    Compositor_DXGIFactoryQueryFailed,
    Compositor_InvalidAdapterDesktop,
    Compositor_InvalidHmdAttachment,
    Compositor_InvalidOutputDesktop,
    Compositor_InvalidDeviceProvided,
    Compositor_D3D11RendererInitializationFailed,
    Compositor_FailedToFindDisplayMode,
    Compositor_FailedToCreateSwapChain,
    Compositor_FailedToGetBackBuffer,
    Compositor_FailedToCreateRenderTarget,
    Compositor_FailedToCreateDXGI2SwapChain,
    Compositor_FailedtoGetDXGI2BackBuffer,
    Compositor_FailedToCreateDXGI2RenderTarget,
    Compositor_FailedToGetDXGIDeviceInterface,
    Compositor_SelectDisplayMode,
    Compositor_FailedToCreateNvAPIRenderTargets,
    Compositor_NvAPISetDisplayMode,
    Compositor_FailedToCreateDirectModeDisplay,
    Compositor_InvalidHmdPropertyContainer,
    Compositor_UpdateDisplayFrequency,
    Compositor_CreateRasterizerState,
    Compositor_CreateWireframeRasterizerState,
    Compositor_CreateSamplerState,
    Compositor_CreateClampToBorderSamplerState,
    Compositor_CreateAnisoSamplerState,
    Compositor_CreateOverlaySamplerState,
    Compositor_CreatePanoramaSamplerState,
    Compositor_CreateFontSamplerState,
    Compositor_CreateNoBlendState,
    Compositor_CreateBlendState,
    Compositor_CreateAlphaBlendState,
    Compositor_CreateBlendStateMaskR,
    Compositor_CreateBlendStateMaskG,
    Compositor_CreateBlendStateMaskB,
    Compositor_CreateDepthStencilState,
    Compositor_CreateDepthStencilStateNoWrite,
    Compositor_CreateDepthStencilStateNoDepth,
    Compositor_CreateFlushTexture,
    Compositor_CreateDistortionSurfaces,
    Compositor_CreateConstantBuffer,
    Compositor_CreateHmdPoseConstantBuffer,
    Compositor_CreateHmdPoseStagingConstantBuffer,
    Compositor_CreateSharedFrameInfoConstantBuffer,
    Compositor_CreateOverlayConstantBuffer,
    Compositor_CreateSceneTextureIndexConstantBuffer,
    Compositor_CreateReadableSceneTextureIndexConstantBuffer,
    Compositor_CreateLayerGraphicsTextureIndexConstantBuffer,
    Compositor_CreateLayerComputeTextureIndexConstantBuffer,
    Compositor_CreateLayerComputeSceneTextureIndexConstantBuffer,
    Compositor_CreateComputeHmdPoseConstantBuffer,
    Compositor_CreateGeomConstantBuffer,
    Compositor_CreatePanelMaskConstantBuffer,
    Compositor_CreatePixelSimUBO,
    Compositor_CreateMSAARenderTextures,
    Compositor_CreateResolveRenderTextures,
    Compositor_CreateComputeResolveRenderTextures,
    Compositor_CreateDriverDirectModeResolveTextures,
    Compositor_OpenDriverDirectModeResolveTextures,
    Compositor_CreateFallbackSyncTexture,
    Compositor_ShareFallbackSyncTexture,
    Compositor_CreateOverlayIndexBuffer,
    Compositor_CreateOverlayVertexBuffer,
    Compositor_CreateTextVertexBuffer,
    Compositor_CreateTextIndexBuffer,
    Compositor_CreateMirrorTextures,
    Compositor_CreateLastFrameRenderTexture,
    Compositor_CreateMirrorOverlay,
    Compositor_FailedToCreateVirtualDisplayBackbuffer,
    Compositor_DisplayModeNotSupported,
    Compositor_CreateOverlayInvalidCall,
    Compositor_CreateOverlayAlreadyInitialized,
    Compositor_FailedToCreateMailbox,
    Compositor_WindowInterfaceIsNull,
    Compositor_SystemLayerCreateInstance,
    Compositor_SystemLayerCreateSession,
    Compositor_CreateInverseDistortUVs,
    Compositor_CreateBackbufferDepth,
    Compositor_CannotDRMLeaseDisplay,
    Compositor_CannotConnectToDisplayServer,
    Compositor_GnomeNoDRMLeasing,
    Compositor_FailedToInitializeEncoder,
    Compositor_CreateBlurTexture,
    VendorSpecific_UnableToConnectToOculusRuntime,
    VendorSpecific_WindowsNotInDevMode,
    VendorSpecific_OculusLinkNotEnabled,
    VendorSpecific_HmdFound_CantOpenDevice,
    VendorSpecific_HmdFound_UnableToRequestConfigStart,
    VendorSpecific_HmdFound_NoStoredConfig,
    VendorSpecific_HmdFound_ConfigTooBig,
    VendorSpecific_HmdFound_ConfigTooSmall,
    VendorSpecific_HmdFound_UnableToInitZLib,
    VendorSpecific_HmdFound_CantReadFirmwareVersion,
    VendorSpecific_HmdFound_UnableToSendUserDataStart,
    VendorSpecific_HmdFound_UnableToGetUserDataStart,
    VendorSpecific_HmdFound_UnableToGetUserDataNext,
    VendorSpecific_HmdFound_UserDataAddressRange,
    VendorSpecific_HmdFound_UserDataError,
    VendorSpecific_HmdFound_ConfigFailedSanityCheck,
    VendorSpecific_OculusRuntimeBadInstall,
    VendorSpecific_HmdFound_UnexpectedConfiguration_1,
    Steam_SteamInstallationNotFound,
    LastError,
};

pub const EVRInitError = enum(i32) {
    None = 0,
    Unknown = 1,
    Init_InstallationNotFound = 100,
    Init_InstallationCorrupt = 101,
    Init_VRClientDLLNotFound = 102,
    Init_FileNotFound = 103,
    Init_FactoryNotFound = 104,
    Init_InterfaceNotFound = 105,
    Init_InvalidInterface = 106,
    Init_UserConfigDirectoryInvalid = 107,
    Init_HmdNotFound = 108,
    Init_NotInitialized = 109,
    Init_PathRegistryNotFound = 110,
    Init_NoConfigPath = 111,
    Init_NoLogPath = 112,
    Init_PathRegistryNotWritable = 113,
    Init_AppInfoInitFailed = 114,
    Init_Retry = 115,
    Init_InitCanceledByUser = 116,
    Init_AnotherAppLaunching = 117,
    Init_SettingsInitFailed = 118,
    Init_ShuttingDown = 119,
    Init_TooManyObjects = 120,
    Init_NoServerForBackgroundApp = 121,
    Init_NotSupportedWithCompositor = 122,
    Init_NotAvailableToUtilityApps = 123,
    Init_Internal = 124,
    Init_HmdDriverIdIsNone = 125,
    Init_HmdNotFoundPresenceFailed = 126,
    Init_VRMonitorNotFound = 127,
    Init_VRMonitorStartupFailed = 128,
    Init_LowPowerWatchdogNotSupported = 129,
    Init_InvalidApplicationType = 130,
    Init_NotAvailableToWatchdogApps = 131,
    Init_WatchdogDisabledInSettings = 132,
    Init_VRDashboardNotFound = 133,
    Init_VRDashboardStartupFailed = 134,
    Init_VRHomeNotFound = 135,
    Init_VRHomeStartupFailed = 136,
    Init_RebootingBusy = 137,
    Init_FirmwareUpdateBusy = 138,
    Init_FirmwareRecoveryBusy = 139,
    Init_USBServiceBusy = 140,
    Init_VRWebHelperStartupFailed = 141,
    Init_TrackerManagerInitFailed = 142,
    Init_AlreadyRunning = 143,
    Init_FailedForVrMonitor = 144,
    Init_PropertyManagerInitFailed = 145,
    Init_WebServerFailed = 146,
    Init_IllegalTypeTransition = 147,
    Init_MismatchedRuntimes = 148,
    Init_InvalidProcessId = 149,
    Init_VRServiceStartupFailed = 150,
    Init_PrismNeedsNewDrivers = 151,
    Init_PrismStartupTimedOut = 152,
    Init_CouldNotStartPrism = 153,
    Init_PrismClientInitFailed = 154,
    Init_PrismClientStartFailed = 155,
    Init_PrismExitedUnexpectedly = 156,
    Init_BadLuid = 157,
    Init_NoServerForAppContainer = 158,
    Init_DuplicateBootstrapper = 159,
    Init_VRDashboardServicePending = 160,
    Init_VRDashboardServiceTimeout = 161,
    Init_VRDashboardServiceStopped = 162,
    Init_VRDashboardAlreadyStarted = 163,
    Init_VRDashboardCopyFailed = 164,
    Init_VRDashboardTokenFailure = 165,
    Init_VRDashboardEnvironmentFailure = 166,
    Init_VRDashboardPathFailure = 167,
    Driver_Failed = 200,
    Driver_Unknown = 201,
    Driver_HmdUnknown = 202,
    Driver_NotLoaded = 203,
    Driver_RuntimeOutOfDate = 204,
    Driver_HmdInUse = 205,
    Driver_NotCalibrated = 206,
    Driver_CalibrationInvalid = 207,
    Driver_HmdDisplayNotFound = 208,
    Driver_TrackedDeviceInterfaceUnknown = 209,
    Driver_HmdDriverIdOutOfBounds = 211,
    Driver_HmdDisplayMirrored = 212,
    Driver_HmdDisplayNotFoundLaptop = 213,
    Driver_PeerDriverNotInstalled = 214,
    Driver_WirelessHmdNotConnected = 215,
    IPC_ServerInitFailed = 300,
    IPC_ConnectFailed = 301,
    IPC_SharedStateInitFailed = 302,
    IPC_CompositorInitFailed = 303,
    IPC_MutexInitFailed = 304,
    IPC_Failed = 305,
    IPC_CompositorConnectFailed = 306,
    IPC_CompositorInvalidConnectResponse = 307,
    IPC_ConnectFailedAfterMultipleAttempts = 308,
    IPC_ConnectFailedAfterTargetExited = 309,
    IPC_NamespaceUnavailable = 310,
    Compositor_Failed = 400,
    Compositor_D3D11HardwareRequired = 401,
    Compositor_FirmwareRequiresUpdate = 402,
    Compositor_OverlayInitFailed = 403,
    Compositor_ScreenshotsInitFailed = 404,
    Compositor_UnableToCreateDevice = 405,
    Compositor_SharedStateIsNull = 406,
    Compositor_NotificationManagerIsNull = 407,
    Compositor_ResourceManagerClientIsNull = 408,
    Compositor_MessageOverlaySharedStateInitFailure = 409,
    Compositor_PropertiesInterfaceIsNull = 410,
    Compositor_CreateFullscreenWindowFailed = 411,
    Compositor_SettingsInterfaceIsNull = 412,
    Compositor_FailedToShowWindow = 413,
    Compositor_DistortInterfaceIsNull = 414,
    Compositor_DisplayFrequencyFailure = 415,
    Compositor_RendererInitializationFailed = 416,
    Compositor_DXGIFactoryInterfaceIsNull = 417,
    Compositor_DXGIFactoryCreateFailed = 418,
    Compositor_DXGIFactoryQueryFailed = 419,
    Compositor_InvalidAdapterDesktop = 420,
    Compositor_InvalidHmdAttachment = 421,
    Compositor_InvalidOutputDesktop = 422,
    Compositor_InvalidDeviceProvided = 423,
    Compositor_D3D11RendererInitializationFailed = 424,
    Compositor_FailedToFindDisplayMode = 425,
    Compositor_FailedToCreateSwapChain = 426,
    Compositor_FailedToGetBackBuffer = 427,
    Compositor_FailedToCreateRenderTarget = 428,
    Compositor_FailedToCreateDXGI2SwapChain = 429,
    Compositor_FailedtoGetDXGI2BackBuffer = 430,
    Compositor_FailedToCreateDXGI2RenderTarget = 431,
    Compositor_FailedToGetDXGIDeviceInterface = 432,
    Compositor_SelectDisplayMode = 433,
    Compositor_FailedToCreateNvAPIRenderTargets = 434,
    Compositor_NvAPISetDisplayMode = 435,
    Compositor_FailedToCreateDirectModeDisplay = 436,
    Compositor_InvalidHmdPropertyContainer = 437,
    Compositor_UpdateDisplayFrequency = 438,
    Compositor_CreateRasterizerState = 439,
    Compositor_CreateWireframeRasterizerState = 440,
    Compositor_CreateSamplerState = 441,
    Compositor_CreateClampToBorderSamplerState = 442,
    Compositor_CreateAnisoSamplerState = 443,
    Compositor_CreateOverlaySamplerState = 444,
    Compositor_CreatePanoramaSamplerState = 445,
    Compositor_CreateFontSamplerState = 446,
    Compositor_CreateNoBlendState = 447,
    Compositor_CreateBlendState = 448,
    Compositor_CreateAlphaBlendState = 449,
    Compositor_CreateBlendStateMaskR = 450,
    Compositor_CreateBlendStateMaskG = 451,
    Compositor_CreateBlendStateMaskB = 452,
    Compositor_CreateDepthStencilState = 453,
    Compositor_CreateDepthStencilStateNoWrite = 454,
    Compositor_CreateDepthStencilStateNoDepth = 455,
    Compositor_CreateFlushTexture = 456,
    Compositor_CreateDistortionSurfaces = 457,
    Compositor_CreateConstantBuffer = 458,
    Compositor_CreateHmdPoseConstantBuffer = 459,
    Compositor_CreateHmdPoseStagingConstantBuffer = 460,
    Compositor_CreateSharedFrameInfoConstantBuffer = 461,
    Compositor_CreateOverlayConstantBuffer = 462,
    Compositor_CreateSceneTextureIndexConstantBuffer = 463,
    Compositor_CreateReadableSceneTextureIndexConstantBuffer = 464,
    Compositor_CreateLayerGraphicsTextureIndexConstantBuffer = 465,
    Compositor_CreateLayerComputeTextureIndexConstantBuffer = 466,
    Compositor_CreateLayerComputeSceneTextureIndexConstantBuffer = 467,
    Compositor_CreateComputeHmdPoseConstantBuffer = 468,
    Compositor_CreateGeomConstantBuffer = 469,
    Compositor_CreatePanelMaskConstantBuffer = 470,
    Compositor_CreatePixelSimUBO = 471,
    Compositor_CreateMSAARenderTextures = 472,
    Compositor_CreateResolveRenderTextures = 473,
    Compositor_CreateComputeResolveRenderTextures = 474,
    Compositor_CreateDriverDirectModeResolveTextures = 475,
    Compositor_OpenDriverDirectModeResolveTextures = 476,
    Compositor_CreateFallbackSyncTexture = 477,
    Compositor_ShareFallbackSyncTexture = 478,
    Compositor_CreateOverlayIndexBuffer = 479,
    Compositor_CreateOverlayVertexBuffer = 480,
    Compositor_CreateTextVertexBuffer = 481,
    Compositor_CreateTextIndexBuffer = 482,
    Compositor_CreateMirrorTextures = 483,
    Compositor_CreateLastFrameRenderTexture = 484,
    Compositor_CreateMirrorOverlay = 485,
    Compositor_FailedToCreateVirtualDisplayBackbuffer = 486,
    Compositor_DisplayModeNotSupported = 487,
    Compositor_CreateOverlayInvalidCall = 488,
    Compositor_CreateOverlayAlreadyInitialized = 489,
    Compositor_FailedToCreateMailbox = 490,
    Compositor_WindowInterfaceIsNull = 491,
    Compositor_SystemLayerCreateInstance = 492,
    Compositor_SystemLayerCreateSession = 493,
    Compositor_CreateInverseDistortUVs = 494,
    Compositor_CreateBackbufferDepth = 495,
    Compositor_CannotDRMLeaseDisplay = 496,
    Compositor_CannotConnectToDisplayServer = 497,
    Compositor_GnomeNoDRMLeasing = 498,
    Compositor_FailedToInitializeEncoder = 499,
    Compositor_CreateBlurTexture = 500,
    VendorSpecific_UnableToConnectToOculusRuntime = 1000,
    VendorSpecific_WindowsNotInDevMode = 1001,
    VendorSpecific_OculusLinkNotEnabled = 1002,
    VendorSpecific_HmdFound_CantOpenDevice = 1101,
    VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
    VendorSpecific_HmdFound_NoStoredConfig = 1103,
    VendorSpecific_HmdFound_ConfigTooBig = 1104,
    VendorSpecific_HmdFound_ConfigTooSmall = 1105,
    VendorSpecific_HmdFound_UnableToInitZLib = 1106,
    VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
    VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
    VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
    VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
    VendorSpecific_HmdFound_UserDataAddressRange = 1111,
    VendorSpecific_HmdFound_UserDataError = 1112,
    VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
    VendorSpecific_OculusRuntimeBadInstall = 1114,
    VendorSpecific_HmdFound_UnexpectedConfiguration_1 = 1115,
    Steam_SteamInstallationNotFound = 2000,
    LastError = 2001,

    fn maybe(init_error: EVRInitError) InitError!void {
        return switch (init_error) {
            .None => {},
            .Unknown => InitError.Unknown,
            .Init_InstallationNotFound => InitError.Init_InstallationNotFound,
            .Init_InstallationCorrupt => InitError.Init_InstallationCorrupt,
            .Init_VRClientDLLNotFound => InitError.Init_VRClientDLLNotFound,
            .Init_FileNotFound => InitError.Init_FileNotFound,
            .Init_FactoryNotFound => InitError.Init_FactoryNotFound,
            .Init_InterfaceNotFound => InitError.Init_InterfaceNotFound,
            .Init_InvalidInterface => InitError.Init_InvalidInterface,
            .Init_UserConfigDirectoryInvalid => InitError.Init_UserConfigDirectoryInvalid,
            .Init_HmdNotFound => InitError.Init_HmdNotFound,
            .Init_NotInitialized => InitError.Init_NotInitialized,
            .Init_PathRegistryNotFound => InitError.Init_PathRegistryNotFound,
            .Init_NoConfigPath => InitError.Init_NoConfigPath,
            .Init_NoLogPath => InitError.Init_NoLogPath,
            .Init_PathRegistryNotWritable => InitError.Init_PathRegistryNotWritable,
            .Init_AppInfoInitFailed => InitError.Init_AppInfoInitFailed,
            .Init_Retry => InitError.Init_Retry,
            .Init_InitCanceledByUser => InitError.Init_InitCanceledByUser,
            .Init_AnotherAppLaunching => InitError.Init_AnotherAppLaunching,
            .Init_SettingsInitFailed => InitError.Init_SettingsInitFailed,
            .Init_ShuttingDown => InitError.Init_ShuttingDown,
            .Init_TooManyObjects => InitError.Init_TooManyObjects,
            .Init_NoServerForBackgroundApp => InitError.Init_NoServerForBackgroundApp,
            .Init_NotSupportedWithCompositor => InitError.Init_NotSupportedWithCompositor,
            .Init_NotAvailableToUtilityApps => InitError.Init_NotAvailableToUtilityApps,
            .Init_Internal => InitError.Init_Internal,
            .Init_HmdDriverIdIsNone => InitError.Init_HmdDriverIdIsNone,
            .Init_HmdNotFoundPresenceFailed => InitError.Init_HmdNotFoundPresenceFailed,
            .Init_VRMonitorNotFound => InitError.Init_VRMonitorNotFound,
            .Init_VRMonitorStartupFailed => InitError.Init_VRMonitorStartupFailed,
            .Init_LowPowerWatchdogNotSupported => InitError.Init_LowPowerWatchdogNotSupported,
            .Init_InvalidApplicationType => InitError.Init_InvalidApplicationType,
            .Init_NotAvailableToWatchdogApps => InitError.Init_NotAvailableToWatchdogApps,
            .Init_WatchdogDisabledInSettings => InitError.Init_WatchdogDisabledInSettings,
            .Init_VRDashboardNotFound => InitError.Init_VRDashboardNotFound,
            .Init_VRDashboardStartupFailed => InitError.Init_VRDashboardStartupFailed,
            .Init_VRHomeNotFound => InitError.Init_VRHomeNotFound,
            .Init_VRHomeStartupFailed => InitError.Init_VRHomeStartupFailed,
            .Init_RebootingBusy => InitError.Init_RebootingBusy,
            .Init_FirmwareUpdateBusy => InitError.Init_FirmwareUpdateBusy,
            .Init_FirmwareRecoveryBusy => InitError.Init_FirmwareRecoveryBusy,
            .Init_USBServiceBusy => InitError.Init_USBServiceBusy,
            .Init_VRWebHelperStartupFailed => InitError.Init_VRWebHelperStartupFailed,
            .Init_TrackerManagerInitFailed => InitError.Init_TrackerManagerInitFailed,
            .Init_AlreadyRunning => InitError.Init_AlreadyRunning,
            .Init_FailedForVrMonitor => InitError.Init_FailedForVrMonitor,
            .Init_PropertyManagerInitFailed => InitError.Init_PropertyManagerInitFailed,
            .Init_WebServerFailed => InitError.Init_WebServerFailed,
            .Init_IllegalTypeTransition => InitError.Init_IllegalTypeTransition,
            .Init_MismatchedRuntimes => InitError.Init_MismatchedRuntimes,
            .Init_InvalidProcessId => InitError.Init_InvalidProcessId,
            .Init_VRServiceStartupFailed => InitError.Init_VRServiceStartupFailed,
            .Init_PrismNeedsNewDrivers => InitError.Init_PrismNeedsNewDrivers,
            .Init_PrismStartupTimedOut => InitError.Init_PrismStartupTimedOut,
            .Init_CouldNotStartPrism => InitError.Init_CouldNotStartPrism,
            .Init_PrismClientInitFailed => InitError.Init_PrismClientInitFailed,
            .Init_PrismClientStartFailed => InitError.Init_PrismClientStartFailed,
            .Init_PrismExitedUnexpectedly => InitError.Init_PrismExitedUnexpectedly,
            .Init_BadLuid => InitError.Init_BadLuid,
            .Init_NoServerForAppContainer => InitError.Init_NoServerForAppContainer,
            .Init_DuplicateBootstrapper => InitError.Init_DuplicateBootstrapper,
            .Init_VRDashboardServicePending => InitError.Init_VRDashboardServicePending,
            .Init_VRDashboardServiceTimeout => InitError.Init_VRDashboardServiceTimeout,
            .Init_VRDashboardServiceStopped => InitError.Init_VRDashboardServiceStopped,
            .Init_VRDashboardAlreadyStarted => InitError.Init_VRDashboardAlreadyStarted,
            .Init_VRDashboardCopyFailed => InitError.Init_VRDashboardCopyFailed,
            .Init_VRDashboardTokenFailure => InitError.Init_VRDashboardTokenFailure,
            .Init_VRDashboardEnvironmentFailure => InitError.Init_VRDashboardEnvironmentFailure,
            .Init_VRDashboardPathFailure => InitError.Init_VRDashboardPathFailure,
            .Driver_Failed => InitError.Driver_Failed,
            .Driver_Unknown => InitError.Driver_Unknown,
            .Driver_HmdUnknown => InitError.Driver_HmdUnknown,
            .Driver_NotLoaded => InitError.Driver_NotLoaded,
            .Driver_RuntimeOutOfDate => InitError.Driver_RuntimeOutOfDate,
            .Driver_HmdInUse => InitError.Driver_HmdInUse,
            .Driver_NotCalibrated => InitError.Driver_NotCalibrated,
            .Driver_CalibrationInvalid => InitError.Driver_CalibrationInvalid,
            .Driver_HmdDisplayNotFound => InitError.Driver_HmdDisplayNotFound,
            .Driver_TrackedDeviceInterfaceUnknown => InitError.Driver_TrackedDeviceInterfaceUnknown,
            .Driver_HmdDriverIdOutOfBounds => InitError.Driver_HmdDriverIdOutOfBounds,
            .Driver_HmdDisplayMirrored => InitError.Driver_HmdDisplayMirrored,
            .Driver_HmdDisplayNotFoundLaptop => InitError.Driver_HmdDisplayNotFoundLaptop,
            .Driver_PeerDriverNotInstalled => InitError.Driver_PeerDriverNotInstalled,
            .Driver_WirelessHmdNotConnected => InitError.Driver_WirelessHmdNotConnected,
            .IPC_ServerInitFailed => InitError.IPC_ServerInitFailed,
            .IPC_ConnectFailed => InitError.IPC_ConnectFailed,
            .IPC_SharedStateInitFailed => InitError.IPC_SharedStateInitFailed,
            .IPC_CompositorInitFailed => InitError.IPC_CompositorInitFailed,
            .IPC_MutexInitFailed => InitError.IPC_MutexInitFailed,
            .IPC_Failed => InitError.IPC_Failed,
            .IPC_CompositorConnectFailed => InitError.IPC_CompositorConnectFailed,
            .IPC_CompositorInvalidConnectResponse => InitError.IPC_CompositorInvalidConnectResponse,
            .IPC_ConnectFailedAfterMultipleAttempts => InitError.IPC_ConnectFailedAfterMultipleAttempts,
            .IPC_ConnectFailedAfterTargetExited => InitError.IPC_ConnectFailedAfterTargetExited,
            .IPC_NamespaceUnavailable => InitError.IPC_NamespaceUnavailable,
            .Compositor_Failed => InitError.Compositor_Failed,
            .Compositor_D3D11HardwareRequired => InitError.Compositor_D3D11HardwareRequired,
            .Compositor_FirmwareRequiresUpdate => InitError.Compositor_FirmwareRequiresUpdate,
            .Compositor_OverlayInitFailed => InitError.Compositor_OverlayInitFailed,
            .Compositor_ScreenshotsInitFailed => InitError.Compositor_ScreenshotsInitFailed,
            .Compositor_UnableToCreateDevice => InitError.Compositor_UnableToCreateDevice,
            .Compositor_SharedStateIsNull => InitError.Compositor_SharedStateIsNull,
            .Compositor_NotificationManagerIsNull => InitError.Compositor_NotificationManagerIsNull,
            .Compositor_ResourceManagerClientIsNull => InitError.Compositor_ResourceManagerClientIsNull,
            .Compositor_MessageOverlaySharedStateInitFailure => InitError.Compositor_MessageOverlaySharedStateInitFailure,
            .Compositor_PropertiesInterfaceIsNull => InitError.Compositor_PropertiesInterfaceIsNull,
            .Compositor_CreateFullscreenWindowFailed => InitError.Compositor_CreateFullscreenWindowFailed,
            .Compositor_SettingsInterfaceIsNull => InitError.Compositor_SettingsInterfaceIsNull,
            .Compositor_FailedToShowWindow => InitError.Compositor_FailedToShowWindow,
            .Compositor_DistortInterfaceIsNull => InitError.Compositor_DistortInterfaceIsNull,
            .Compositor_DisplayFrequencyFailure => InitError.Compositor_DisplayFrequencyFailure,
            .Compositor_RendererInitializationFailed => InitError.Compositor_RendererInitializationFailed,
            .Compositor_DXGIFactoryInterfaceIsNull => InitError.Compositor_DXGIFactoryInterfaceIsNull,
            .Compositor_DXGIFactoryCreateFailed => InitError.Compositor_DXGIFactoryCreateFailed,
            .Compositor_DXGIFactoryQueryFailed => InitError.Compositor_DXGIFactoryQueryFailed,
            .Compositor_InvalidAdapterDesktop => InitError.Compositor_InvalidAdapterDesktop,
            .Compositor_InvalidHmdAttachment => InitError.Compositor_InvalidHmdAttachment,
            .Compositor_InvalidOutputDesktop => InitError.Compositor_InvalidOutputDesktop,
            .Compositor_InvalidDeviceProvided => InitError.Compositor_InvalidDeviceProvided,
            .Compositor_D3D11RendererInitializationFailed => InitError.Compositor_D3D11RendererInitializationFailed,
            .Compositor_FailedToFindDisplayMode => InitError.Compositor_FailedToFindDisplayMode,
            .Compositor_FailedToCreateSwapChain => InitError.Compositor_FailedToCreateSwapChain,
            .Compositor_FailedToGetBackBuffer => InitError.Compositor_FailedToGetBackBuffer,
            .Compositor_FailedToCreateRenderTarget => InitError.Compositor_FailedToCreateRenderTarget,
            .Compositor_FailedToCreateDXGI2SwapChain => InitError.Compositor_FailedToCreateDXGI2SwapChain,
            .Compositor_FailedtoGetDXGI2BackBuffer => InitError.Compositor_FailedtoGetDXGI2BackBuffer,
            .Compositor_FailedToCreateDXGI2RenderTarget => InitError.Compositor_FailedToCreateDXGI2RenderTarget,
            .Compositor_FailedToGetDXGIDeviceInterface => InitError.Compositor_FailedToGetDXGIDeviceInterface,
            .Compositor_SelectDisplayMode => InitError.Compositor_SelectDisplayMode,
            .Compositor_FailedToCreateNvAPIRenderTargets => InitError.Compositor_FailedToCreateNvAPIRenderTargets,
            .Compositor_NvAPISetDisplayMode => InitError.Compositor_NvAPISetDisplayMode,
            .Compositor_FailedToCreateDirectModeDisplay => InitError.Compositor_FailedToCreateDirectModeDisplay,
            .Compositor_InvalidHmdPropertyContainer => InitError.Compositor_InvalidHmdPropertyContainer,
            .Compositor_UpdateDisplayFrequency => InitError.Compositor_UpdateDisplayFrequency,
            .Compositor_CreateRasterizerState => InitError.Compositor_CreateRasterizerState,
            .Compositor_CreateWireframeRasterizerState => InitError.Compositor_CreateWireframeRasterizerState,
            .Compositor_CreateSamplerState => InitError.Compositor_CreateSamplerState,
            .Compositor_CreateClampToBorderSamplerState => InitError.Compositor_CreateClampToBorderSamplerState,
            .Compositor_CreateAnisoSamplerState => InitError.Compositor_CreateAnisoSamplerState,
            .Compositor_CreateOverlaySamplerState => InitError.Compositor_CreateOverlaySamplerState,
            .Compositor_CreatePanoramaSamplerState => InitError.Compositor_CreatePanoramaSamplerState,
            .Compositor_CreateFontSamplerState => InitError.Compositor_CreateFontSamplerState,
            .Compositor_CreateNoBlendState => InitError.Compositor_CreateNoBlendState,
            .Compositor_CreateBlendState => InitError.Compositor_CreateBlendState,
            .Compositor_CreateAlphaBlendState => InitError.Compositor_CreateAlphaBlendState,
            .Compositor_CreateBlendStateMaskR => InitError.Compositor_CreateBlendStateMaskR,
            .Compositor_CreateBlendStateMaskG => InitError.Compositor_CreateBlendStateMaskG,
            .Compositor_CreateBlendStateMaskB => InitError.Compositor_CreateBlendStateMaskB,
            .Compositor_CreateDepthStencilState => InitError.Compositor_CreateDepthStencilState,
            .Compositor_CreateDepthStencilStateNoWrite => InitError.Compositor_CreateDepthStencilStateNoWrite,
            .Compositor_CreateDepthStencilStateNoDepth => InitError.Compositor_CreateDepthStencilStateNoDepth,
            .Compositor_CreateFlushTexture => InitError.Compositor_CreateFlushTexture,
            .Compositor_CreateDistortionSurfaces => InitError.Compositor_CreateDistortionSurfaces,
            .Compositor_CreateConstantBuffer => InitError.Compositor_CreateConstantBuffer,
            .Compositor_CreateHmdPoseConstantBuffer => InitError.Compositor_CreateHmdPoseConstantBuffer,
            .Compositor_CreateHmdPoseStagingConstantBuffer => InitError.Compositor_CreateHmdPoseStagingConstantBuffer,
            .Compositor_CreateSharedFrameInfoConstantBuffer => InitError.Compositor_CreateSharedFrameInfoConstantBuffer,
            .Compositor_CreateOverlayConstantBuffer => InitError.Compositor_CreateOverlayConstantBuffer,
            .Compositor_CreateSceneTextureIndexConstantBuffer => InitError.Compositor_CreateSceneTextureIndexConstantBuffer,
            .Compositor_CreateReadableSceneTextureIndexConstantBuffer => InitError.Compositor_CreateReadableSceneTextureIndexConstantBuffer,
            .Compositor_CreateLayerGraphicsTextureIndexConstantBuffer => InitError.Compositor_CreateLayerGraphicsTextureIndexConstantBuffer,
            .Compositor_CreateLayerComputeTextureIndexConstantBuffer => InitError.Compositor_CreateLayerComputeTextureIndexConstantBuffer,
            .Compositor_CreateLayerComputeSceneTextureIndexConstantBuffer => InitError.Compositor_CreateLayerComputeSceneTextureIndexConstantBuffer,
            .Compositor_CreateComputeHmdPoseConstantBuffer => InitError.Compositor_CreateComputeHmdPoseConstantBuffer,
            .Compositor_CreateGeomConstantBuffer => InitError.Compositor_CreateGeomConstantBuffer,
            .Compositor_CreatePanelMaskConstantBuffer => InitError.Compositor_CreatePanelMaskConstantBuffer,
            .Compositor_CreatePixelSimUBO => InitError.Compositor_CreatePixelSimUBO,
            .Compositor_CreateMSAARenderTextures => InitError.Compositor_CreateMSAARenderTextures,
            .Compositor_CreateResolveRenderTextures => InitError.Compositor_CreateResolveRenderTextures,
            .Compositor_CreateComputeResolveRenderTextures => InitError.Compositor_CreateComputeResolveRenderTextures,
            .Compositor_CreateDriverDirectModeResolveTextures => InitError.Compositor_CreateDriverDirectModeResolveTextures,
            .Compositor_OpenDriverDirectModeResolveTextures => InitError.Compositor_OpenDriverDirectModeResolveTextures,
            .Compositor_CreateFallbackSyncTexture => InitError.Compositor_CreateFallbackSyncTexture,
            .Compositor_ShareFallbackSyncTexture => InitError.Compositor_ShareFallbackSyncTexture,
            .Compositor_CreateOverlayIndexBuffer => InitError.Compositor_CreateOverlayIndexBuffer,
            .Compositor_CreateOverlayVertexBuffer => InitError.Compositor_CreateOverlayVertexBuffer,
            .Compositor_CreateTextVertexBuffer => InitError.Compositor_CreateTextVertexBuffer,
            .Compositor_CreateTextIndexBuffer => InitError.Compositor_CreateTextIndexBuffer,
            .Compositor_CreateMirrorTextures => InitError.Compositor_CreateMirrorTextures,
            .Compositor_CreateLastFrameRenderTexture => InitError.Compositor_CreateLastFrameRenderTexture,
            .Compositor_CreateMirrorOverlay => InitError.Compositor_CreateMirrorOverlay,
            .Compositor_FailedToCreateVirtualDisplayBackbuffer => InitError.Compositor_FailedToCreateVirtualDisplayBackbuffer,
            .Compositor_DisplayModeNotSupported => InitError.Compositor_DisplayModeNotSupported,
            .Compositor_CreateOverlayInvalidCall => InitError.Compositor_CreateOverlayInvalidCall,
            .Compositor_CreateOverlayAlreadyInitialized => InitError.Compositor_CreateOverlayAlreadyInitialized,
            .Compositor_FailedToCreateMailbox => InitError.Compositor_FailedToCreateMailbox,
            .Compositor_WindowInterfaceIsNull => InitError.Compositor_WindowInterfaceIsNull,
            .Compositor_SystemLayerCreateInstance => InitError.Compositor_SystemLayerCreateInstance,
            .Compositor_SystemLayerCreateSession => InitError.Compositor_SystemLayerCreateSession,
            .Compositor_CreateInverseDistortUVs => InitError.Compositor_CreateInverseDistortUVs,
            .Compositor_CreateBackbufferDepth => InitError.Compositor_CreateBackbufferDepth,
            .Compositor_CannotDRMLeaseDisplay => InitError.Compositor_CannotDRMLeaseDisplay,
            .Compositor_CannotConnectToDisplayServer => InitError.Compositor_CannotConnectToDisplayServer,
            .Compositor_GnomeNoDRMLeasing => InitError.Compositor_GnomeNoDRMLeasing,
            .Compositor_FailedToInitializeEncoder => InitError.Compositor_FailedToInitializeEncoder,
            .Compositor_CreateBlurTexture => InitError.Compositor_CreateBlurTexture,
            .VendorSpecific_UnableToConnectToOculusRuntime => InitError.VendorSpecific_UnableToConnectToOculusRuntime,
            .VendorSpecific_WindowsNotInDevMode => InitError.VendorSpecific_WindowsNotInDevMode,
            .VendorSpecific_OculusLinkNotEnabled => InitError.VendorSpecific_OculusLinkNotEnabled,
            .VendorSpecific_HmdFound_CantOpenDevice => InitError.VendorSpecific_HmdFound_CantOpenDevice,
            .VendorSpecific_HmdFound_UnableToRequestConfigStart => InitError.VendorSpecific_HmdFound_UnableToRequestConfigStart,
            .VendorSpecific_HmdFound_NoStoredConfig => InitError.VendorSpecific_HmdFound_NoStoredConfig,
            .VendorSpecific_HmdFound_ConfigTooBig => InitError.VendorSpecific_HmdFound_ConfigTooBig,
            .VendorSpecific_HmdFound_ConfigTooSmall => InitError.VendorSpecific_HmdFound_ConfigTooSmall,
            .VendorSpecific_HmdFound_UnableToInitZLib => InitError.VendorSpecific_HmdFound_UnableToInitZLib,
            .VendorSpecific_HmdFound_CantReadFirmwareVersion => InitError.VendorSpecific_HmdFound_CantReadFirmwareVersion,
            .VendorSpecific_HmdFound_UnableToSendUserDataStart => InitError.VendorSpecific_HmdFound_UnableToSendUserDataStart,
            .VendorSpecific_HmdFound_UnableToGetUserDataStart => InitError.VendorSpecific_HmdFound_UnableToGetUserDataStart,
            .VendorSpecific_HmdFound_UnableToGetUserDataNext => InitError.VendorSpecific_HmdFound_UnableToGetUserDataNext,
            .VendorSpecific_HmdFound_UserDataAddressRange => InitError.VendorSpecific_HmdFound_UserDataAddressRange,
            .VendorSpecific_HmdFound_UserDataError => InitError.VendorSpecific_HmdFound_UserDataError,
            .VendorSpecific_HmdFound_ConfigFailedSanityCheck => InitError.VendorSpecific_HmdFound_ConfigFailedSanityCheck,
            .VendorSpecific_OculusRuntimeBadInstall => InitError.VendorSpecific_OculusRuntimeBadInstall,
            .VendorSpecific_HmdFound_UnexpectedConfiguration_1 => InitError.VendorSpecific_HmdFound_UnexpectedConfiguration_1,
            .Steam_SteamInstallationNotFound => InitError.Steam_SteamInstallationNotFound,
            .LastError => InitError.LastError,
        };
    }

    pub fn asSymbol(init_error: EVRInitError) [*:0]const u8 {
        return VR_GetVRInitErrorAsSymbol(init_error);
    }
    pub fn asEnglishDescription(init_error: EVRInitError) [:0]const u8 {
        return std.mem.span(VR_GetVRInitErrorAsEnglishDescription(init_error));
    }
};

pub const ApplicationType = EVRApplicationType;
const EVRApplicationType = enum(i32) {
    other = 0,
    scene = 1,
    overlay = 2,
    background = 3,
    utility = 4,
    vr_monitor = 5,
    steam_watchdog = 6,
    bootstrapper = 7,
    web_helper = 8,
    open_xr_instance = 9,
    open_xr_scene = 10,
    open_xr_overlay = 11,
    prism = 12,
    room_view = 13,
    max = 14,
};
extern fn VR_InitInternal(peError: *EVRInitError, eType: EVRApplicationType) usize;

pub const shutdown = VR_ShutdownInternal;
extern fn VR_ShutdownInternal() void;

const std = @import("std");

extern fn VR_GetVRInitErrorAsSymbol(init_error: EVRInitError) [*:0]const u8;
extern fn VR_GetVRInitErrorAsEnglishDescription(init_error: EVRInitError) [*:0]const u8;

test "init error have english descriptions" {
    try std.testing.expectEqualStrings("No Error (0)", EVRInitError.None.asEnglishDescription());
}

test "init/shutdown utility" {
    _ = try init(.utility);
    defer shutdown();
}

pub const isHmdPresent = VR_IsHmdPresent;
extern fn VR_IsHmdPresent() bool;
